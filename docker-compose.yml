version: '3.4'

services:
  api:
    container_name: ${PROJECT_NAME}_api
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    env_file:
      - .env
    command:
      - /bin/bash
      - -c
      - |
        yes 'yes' | python manage.py collectstatic 
        python manage.py makemigrations
        python manage.py migrate --noinput
        python manage.py loaddata drones medications loads
        python manage.py inituser
        /bin/sh -c "while sleep 1000; do :; done"
      #  uwsgi --ini /project/uwsgi.ini
      # /bin/sh -c "while sleep 1000; do :; done"
    volumes:
      - ./api:/project
      - api-media:/api_media
    ports:
      - 8005:8000
    restart: always
    depends_on:
      - db
  redis:
    container_name: ${PROJECT_NAME}-redis
    image: redis:alpine
    restart: always
  celery:
    container_name: ${PROJECT_NAME}-celery
    build:
      context: . 
      dockerfile: docker/api/Dockerfile
      args:
        - http_proxy=${HTTP_PROXY}
        - https_proxy=${HTTPS_PROXY}
    command: celery -A drones worker -l info -f /var/log/celery.logs
    volumes:
      - ./api:/project
      - api-media:/api_media
      - celery-log:/var/log/
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    env_file:
      - .env
    depends_on:
      - redis
    restart: always
  celery-beat:
    container_name: ${PROJECT_NAME}-celery-beat
    build:
      context: . 
      dockerfile: docker/api/Dockerfile
    command: celery -A drones beat -l info
    volumes:
      - ./api:/project
      - api-media:/api_media
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    env_file:
      - .env
    restart: always
  dashboard:
    container_name: ${PROJECT_NAME}-dashboard
    build:
      context: . 
      dockerfile: docker/api/Dockerfile
      args:
        - http_proxy=${HTTP_PROXY}
        - https_proxy=${HTTPS_PROXY}
    command: celery flower -A drones --port=5555 --broker=redis://redis:6379/0
    ports:
      - 5555:5555
    env_file:
      - .env
    depends_on:
      - api
      - redis
      - celery
  db:
    container_name: ${PROJECT_NAME}_db
    build:
      context: . 
      dockerfile: docker/database/Dockerfile
    ports:
      - 5435:${POSTGRES_PORT}
    env_file:
      - .env
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
volumes:
  api-media:
    name: ${PROJECT_NAME}_api_media
  db-data:
    name: ${PROJECT_NAME}_db_data
  celery-log:
    name: ${PROJECT_NAME}_celery_log

